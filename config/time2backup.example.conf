#
#  time2backup configuration file v1.9.5
#
#  For more information about this configuration file, please
#  read documentation here: https://github.com/time2backup/time2backup
#

########################
#  BACKUP DESTINATION  #
########################

# Destination path for backups.
# You can use relative or absolute paths. You can also use the ~ symbol.
# If you use relative paths, it will be relative to the path of the script.
# This value cannot be unset. If you use the configuration wizard,
# it will be set with your choice.
# Note: For SMB destinations, use format: "//server/path" and set a path
#       to "backup_disk_mountpoint" parameter in "Before backup" section below.
# No default value; this field is mandatory.
destination = ""

# Test if destination has enough space before backup.
# Put it to false ONLY if you are sure of your destination and you want to
# run backup more quickly. If there is not enough space, your backup will fail.
# Default value: true
#test_destination = true

# Clone source to destination without versionning.
# Default value: false
#clone_mode = false


####################
#  BACKUPS ROTATE  #
####################

# Number of old backups to keep.
# Use 0 to keep only a mirror of your current files (do not keep old versions).
# Use -1 for unlimited backups (keep revisions until disk is full).
# You can also use period values (m: minutes, h: hours, d: days)
# e.g. 7d will clean backups older than 7 days
# Default value: -1
#keep_limit = -1

# Clean old backups when destination disk is full.
# When your backup destination disk is full, time2backup will delete oldest backups
# until there is space enough on the disk to perform backup.
# Default value: true
#clean_old_backups = true

# When cleaning old backups, you can set a limit to always keep at least the
# last N backups (current backup not included).
# Default value: 0
#clean_keep = 0

# Trash mode
# If this mode is enabled, tim2backup will keep only a mirror of current files
# and will put all revisions in one trash folder
# Default value: false
#trash_mode = false


###################################################################
#  RECURRENT BACKUPS                                              #
#                                                                 #
#  Run a backup at least one time per hour/day/week/month.        #
#  If you want to use planned backups, please create rules in     #
#  your crontab (run crontab -e to edit).                         #
#  e.g. To backup every Sunday at 23:59, add the following line:  #
#       59 23 * * sun   /path/to/time2backup.sh backup            #
###################################################################

# Enable recurrent backups
# Default value: false
#recurrent = false

# Recurrent backups frequency
# Values: hourly|daily|weekly|monthly (default: daily)
#         other custom values: d for days, h for hours (e.g. 2d, 4h)
# Be careful when using too frequent backups as it can take many space on disks.
# Default value: daily
#frequency = daily


################################
#  BEFORE BACKUP               #
#                              #
#  Things to do before backup  #
################################

# Mount destination automatically.
# WARNING: This option may require sudo privileges.
#          To avoid bad user contexts, you can run time2backup with sudo
#          and the --user global option.
# Note: On most Linux desktop environments and macOS, USB devices are mounted
#       when plugged.
# Default value: true
#mount = true

# Mount point disk for auto mount (often /media/user/disk)
# If your destination is a SMB share, you have to set this field.
# WARNING: DO NOT USE an existing directory!
# If you use the configuration wizard, it will be set with the mountpoint
# of your chosen destination backup.
#backup_disk_mountpoint =

# Disk UUID of backup destination for auto mount
# WARNING: Do NOT modify this value unless you really know what you're doing.
# If you use the configuration wizard, it will be set with the disk UUID
# of your chosen destination backup.
#backup_disk_uuid =

# Execute a command/script before backup.
# Put here the path to a command/script to be run before backup.
# Please note that if you want to mount backup destination,
# you can use the mount option above.
# If you are using auto-mount options, remember that this command/script
# will be executed BEFORE mount and backup.
# Use array with values between quotes as below:
#    exec_before = (/path/to/script --myoption "option with spaces")
#    exec_before = (mount "/media/backup disk")
#exec_before = ()

# Stop backup if exec_before command/script failed.
# Set to true to block, false to continue.
# Default value: false
#exec_before_block = false


################################
#  AFTER BACKUP                #
#                              #
#  Things to do after backup   #
################################

# Unmount destination after backup
# Default value: false
#unmount = false

# If the device was mounted automatically, unmount it.
# If it was already mounted, it will not be unmounted.
# Default value: true
#unmount_auto = true

# Shutdown PC after backup (useful for planned backups).
# BEWARE that enabling this option will shutdown your computer EVERY TIME
# you run a backup, even manually.
# The --shutdown command line option should be the best choice in most cases.
# Default value: false
#shutdown = false

# Custom command/script for shutdown.
# Use array with values between quotes as below:
#    shutdown_cmd = (/path/to/shutdown_script --myoption "option with spaces")
#    shutdown_cmd = (shutdown -h 10 "PC will halt in 10 minutes")
# Default command: shutdown -h now (or shutdown /s on Windows systems)
#shutdown_cmd = (shutdown -h now)

# Execute a command/script after backup.
# Put here the path to a command/script to run after backup.
# Please note that if you want to unmount backup destination and/or shutdown PC,
# you can use the unmount and shutdown options above.
# If you use unmount or shutdown options, remember that this command/script
# will be executed BEFORE unmount/shutdown.
# Use array with values between quotes as below:
#    exec_after = (/path/to/script --myoption "option with spaces")
#    exec_after = (unmount "/media/backup disk")
#exec_after = ()

# Stop time2backup if exec_after command/script failed.
# Set to true to block, false to continue.
# Default value: false
#exec_after_block = false


##########
#  LOGS  #
##########

# Keep backup logs.
# Values: none|on_error|always
# Default value: on_error
#keep_logs = on_error

# Logs directory path.
# If not set, logs are stored into the backup destination in the "logs" directory.
#logs_directory = ""

# Default log level.
# Valid levels: CRITICAL|ERROR|WARNING|INFO|DEBUG
# Default value: INFO
#log_level = INFO


#####################################
#  NOTIFICATIONS                    #
#                                   #
#  Desktop and email notifications  #
#####################################

# Display notifications on desktop to inform users when
# backup/restore starts and finished (not available in console mode).
# Default value: true
#notifications = true

# Send an email report after backup.
# Note: email_recipient option must be correctly set to send emails
# Values: none|on_error|always
# Default value: none
#email_report = none

# Email recipient(s)
# If not set, email will not be sent
# You can set multiple addresses separated with a comma
#email_recipient = ""

# Email sender address (optional)
# The receiver will see emails coming from this address.
#email_sender = ""

# Email subject prefix (optional)
# You can set a text that will be in prefix in email subjects.
#email_subject_prefix = ""


###############
#  INTERFACE  #
###############

# Display progress for each file
# Default value: false
#files_progress = false

# Execute time2backup only in console with no popup windows or notifications
# Default value: false
#console_mode = false


####################
#  REMOTE BACKUPS  #
####################

# Enable network compression to reduce network bandwidth
# Use it if you are backuping distant sources with a bad connection.
# Default value: false
#network_compression = false

# SSH options
# Put here your SSH options (will be common for all sources)
# Default: empty
#ssh_options = ()

# rsync remote path
# When backuping over SSH, you can set the path of the distant rsync command.
# e.g. to enable distant sudo, set: "sudo rsync"
# Default: rsync
#rsync_remote_path = rsync


######################
#  ADVANCED OPTIONS  #
######################

# DO NOT CHANGE THE FOLLOWING VALUES UNLESS YOU REALLY KNOW WHAT YOU ARE DOING

# Sources configuration file
# By default, the file named 'sources.conf' in the current config directory.
#config_sources = ~/.config/time2backup/sources.conf

# Exclude config file
# By default, the file named 'excludes.conf' in the current config directory.
#config_excludes = ~/.config/time2backup/excludes.conf

# Max file size
# Do not backup files larger than the following value.
# You can use K/KB, M/MB, G/GB suffixes to indicate size multiplier.
# See rsync manual for more information.
# Default value: empty (no limit)
#max_size =

# Use hard links to create backup snapshots.
# If destination disk does not support hard links, time2backup will
# use the trash system automatically.
# Default value: true
#hard_links = true

# Force to use hard links even if destination does not support it.
# BE CAREFUL with this option as it can duplicate files.
# Default value: false
#force_hard_links = false

# Preserve ownerships and access rights on backups
# Default value: true (false on Windows systems)
#preserve_permissions = true

# rsync command path
# You can set a custom local path to rsync here.
# Default: rsync
#rsync_path = rsync

# rsync additional options
# rsync is already set with options:
# -aHv [--progress] [--delete] [--link-dest|-b --backup-dir]
# Be careful using this not to overwrite existing options.
#rsync_options = ()

# Default verbose level
# Valid levels: CRITICAL|ERROR|WARNING|INFO|DEBUG
# Default value: INFO
#verbose_level = INFO
